<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fillViewport="true">
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    android:orientation="vertical"
    android:background="#00796b"
    tools:context="com.example.hp.above.BipartiteGraphActivity">

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Graph | Bipartite Graph"
        android:textSize="20sp"
        android:textStyle="bold"
        android:background="#009688"
        android:textColor="#ffffff"
        android:layout_marginTop="32dp"
        android:layout_marginBottom="32dp"/>

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textColor="#ffffff"
        android:text="\nA Bipartite Graph is a graph whose vertices can be divided into two independent sets, U and V such that every edge (u, v) either connects a vertex from U to V or a vertex from V to U.
\n\nIn other words, for every edge (u, v), either u belongs to U and v to V, or u belongs to V and v to U. We can also say that there is no edge that connects vertices of same set.
        "/>

    <ImageView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:src="@drawable/bipartite1"
        android:scaleType="fitCenter"
        android:layout_margin="8dp"/>

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textColor="#ffffff"
        android:text="\nA bipartite graph is possible if the graph coloring is possible using two colors such that vertices in a set are colored with the same color.
\n\nNote that it is possible to color a cycle graph with even cycle using two colors. For example, see the following graph.
        "/>

    <ImageView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:src="@drawable/bipartite2"
        android:scaleType="fitCenter"
        android:layout_margin="8dp"/>

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textColor="#ffffff"
        android:text="\n\nIt is not possible to color a cycle graph with odd cycle using two colors.\n\n"/>

    <ImageView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:src="@drawable/bipartite2"
        android:scaleType="fitCenter"
        android:layout_margin="8dp"/>

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textColor="#ffffff"
        android:text="\n\nAlgorithm to check if a graph is Bipartite:
\n\nOne approach is to check whether the graph is 2-colorable or not using backtracking algorithm m coloring problem.
\n\nFollowing is a simple algorithm to find out whether a given graph is Birpartite or not using Breadth First Search (BFS).
\n\n1.	Assign RED color to the source vertex (putting into set U).
\n\n2.	Color all the neighbors with BLUE color (putting into set V).
\n\n3.	Color all neighborâ€™s neighbor with RED color (putting into set U).
\n\n4.	This way, assign color to all vertices such that it satisfies all the constraints of m way coloring problem where m = 2.
\n\n5. While assigning colors, if we find a neighbor which is colored with same color as current vertex, then the graph cannot be colored with 2 vertices (or graph is not Bipartite)
\n\n"/>

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="\n\nRead More..\n\n"
        android:textColor="#ffffff"
        android:onClick="bipartite_code"
        android:id="@+id/bipartite_code"/>

</LinearLayout>
</ScrollView>