<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fillViewport="true">
    <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
        xmlns:tools="http://schemas.android.com/tools"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:paddingBottom="@dimen/activity_vertical_margin"
        android:paddingLeft="@dimen/activity_horizontal_margin"
        android:paddingRight="@dimen/activity_horizontal_margin"
        android:paddingTop="@dimen/activity_vertical_margin"
        android:orientation="vertical"
        android:background="@drawable/background6"
        tools:context="com.example.hp.above.JavaAbstractionActivity">


        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:background="#311B92"
            android:textColor="#FFFFFF"
            android:textSize="20sp"
            android:text="Abstract Class"/>

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="\n\nIf a class contain any abstract method then the class is declared as abstract class. An abstract class is never instantiated. It is used to provide abstraction. Although it does not provide 100% abstraction because it can also have concrete method.

\nSyntax :

\nabstract class class_name { }"/>



        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:background="#311B92"
            android:textColor="#FFFFFF"
            android:textSize="20sp"
            android:layout_marginTop="10dp"
            android:text="Abstract method"/>





        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="\n\nMethod that are declared without any body within an abstract class is known as abstract method. The method body will be defined by its subclass. Abstract method can never be final and static. Any class that extends an abstract class must implement all the abstract methods declared by the super class.

\nSyntax :

\nabstract return_type function_name ();    // No definition"/>








    </LinearLayout>
</ScrollView>