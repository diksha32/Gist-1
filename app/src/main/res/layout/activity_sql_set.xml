<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fillViewport="true">
    <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
        xmlns:tools="http://schemas.android.com/tools"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:paddingBottom="@dimen/activity_vertical_margin"
        android:paddingLeft="@dimen/activity_horizontal_margin"
        android:paddingRight="@dimen/activity_horizontal_margin"
        android:paddingTop="@dimen/activity_vertical_margin"
        android:orientation="vertical"
        android:background="@drawable/background1"
        tools:context="com.example.hp.above.SqlSetActivity">




        <TextView
            android:layout_width="match_parent"
            android:background="#FFFFFF"
            android:textColor="#B71C1C"
            android:layout_marginTop="10dp"
            android:layout_height="wrap_content"
            android:textSize="25sp"
            android:textStyle="bold"
            android:text="SQL Set Operations"/>

        <TextView
            android:layout_width="match_parent"
            android:background="#FFFFFF"
            android:textColor="#B71C1C"
            android:layout_marginTop="10dp"
            android:layout_height="wrap_content"
            android:textSize="15sp"
            android:text="\n1) UNION"/>


        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="\nUNION is used to combine the results of two or more Select statements. However it will eliminate duplicate rows from its result set. In case of union, number of columns and datatype must be same in both the tables"/>


        <ImageView
            android:src="@drawable/union"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginLeft="5dp"
            android:layout_marginTop="10dp"
            android:layout_marginBottom="8dp"
            android:scaleType="fitXY"/>


        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="\nExample:select * from First
\nUNION
\nselect * from second;"/>


        <ImageView
            android:src="@drawable/union1"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginLeft="5dp"
            android:layout_marginTop="10dp"
            android:layout_marginBottom="8dp"
            android:scaleType="fitXY"/>




        <TextView
            android:layout_width="match_parent"
            android:background="#FFFFFF"
            android:textColor="#B71C1C"
            android:layout_marginTop="10dp"
            android:layout_height="wrap_content"
            android:textSize="15sp"
            android:text="\nINTERSECT"/>
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="\n\nIntersect operation is used to combine two SELECT statements, but it only retuns the records which are common from both SELECT statements. In case of Intersect the number of columns and datatype must be same"/>

        <ImageView
            android:src="@drawable/union"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginLeft="5dp"
            android:layout_marginTop="10dp"
            android:layout_marginBottom="8dp"
            android:scaleType="fitXY"/>



        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="\nExample:select * from First
\nINTERSECT
\nselect * from second;"/>


        <ImageView
            android:src="@drawable/intersect"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginLeft="5dp"
            android:layout_marginTop="10dp"
            android:layout_marginBottom="8dp"
            android:scaleType="fitXY"/>


        <TextView
            android:layout_width="match_parent"
            android:background="#FFFFFF"
            android:textColor="#B71C1C"
            android:layout_marginTop="10dp"
            android:layout_height="wrap_content"
            android:textSize="15sp"
            android:text="\nPrimary Key Constraint"/>
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="\nPrimary key constraint uniquely identifies each record in a database. A Primary Key must contain unique value and it must not contain null value"/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="\nExample:CREATE table Student (s_id int PRIMARY KEY, Name varchar(60) NOT NULL, Age int);"/>

        <TextView
            android:layout_width="match_parent"
            android:background="#FFFFFF"
            android:textColor="#B71C1C"
            android:layout_marginTop="10dp"
            android:layout_height="wrap_content"
            android:textSize="15sp"
            android:text="\nForeign Key Constraint"/>
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="\nFOREIGN KEY is used to relate two tables. FOREIGN KEY constraint is also used to restrict actions that would destroy links between tables"/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="\nExample:CREATE table Order_Detail(order_id int PRIMARY KEY,
order_name varchar(60) NOT NULL,
c_id int FOREIGN KEY REFERENCES Customer_Detail(c_id));"/>

        <ImageView
            android:src="@drawable/foreignkeyconstraints"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginLeft="5dp"
            android:layout_marginTop="10dp"
            android:layout_marginBottom="8dp"
            android:scaleType="fitXY"/>
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="\nIn Customer_Detail table, c_id is the primary key which is set as foreign key in Order_Detail table"/>







    </LinearLayout>
</ScrollView>