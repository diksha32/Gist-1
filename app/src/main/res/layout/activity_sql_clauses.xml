<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fillViewport="true">
    <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
        xmlns:tools="http://schemas.android.com/tools"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:paddingBottom="@dimen/activity_vertical_margin"
        android:paddingLeft="@dimen/activity_horizontal_margin"
        android:paddingRight="@dimen/activity_horizontal_margin"
        android:paddingTop="@dimen/activity_vertical_margin"
        android:orientation="vertical"
        android:background="@drawable/background1"
        tools:context="com.example.hp.above.SqlClausesActivity">


        <ImageView
            android:src="@drawable/studenttable1"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginLeft="5dp"
            android:layout_marginTop="10dp"
            android:layout_marginBottom="8dp"
            android:scaleType="fitXY"/>


        <TextView
            android:layout_width="match_parent"
            android:background="#FFFFFF"
            android:textColor="#B71C1C"
            android:layout_marginTop="10dp"
            android:layout_height="wrap_content"
            android:textSize="20sp"
            android:text="Where Clause"/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="\n\nWhere clause is used to specify condition while retriving data from table. Where clause is used mostly with Select, Update and Delete query. If condititon specified by where clause is true then only the result from table is returned"/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textSize="20sp"
            android:textColor="#FFFFFF"
            android:text="\nSyntax:"/>
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="\nSELECT column-name1,
 \ncolumn-name2,
 \ncolumn-name3,
 \ncolumn-nameN
\nfrom table-name WHERE [condition];"/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="\nSELECT s_id,
 s_name,
 age,
 address
from Student WHERE s_id=101; "/>

        <ImageView
            android:src="@drawable/whereclause"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginLeft="5dp"
            android:layout_marginTop="10dp"
            android:layout_marginBottom="8dp"
            android:scaleType="fitXY"/>


        <TextView
            android:layout_width="match_parent"
            android:background="#FFFFFF"
            android:textColor="#B71C1C"
            android:layout_marginTop="10dp"
            android:layout_height="wrap_content"
            android:textSize="20sp"
            android:text="Select Query"/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="\n\nSelect query is used to retrieve data from a tables. It is the most used SQL query. We can retrieve complete tables, or partial by mentioning conditions using WHERE clause"/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:textSize="20sp"
            android:text="\nSyntax:"/>
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="\nSELECT column-name1, column-name2, column-name3, column-nameN from table-name; "/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="\nSELECT s_id, s_name, age from Student; "/>

        <ImageView
            android:src="@drawable/selectclause"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginLeft="5dp"
            android:layout_marginTop="10dp"
            android:layout_marginBottom="8dp"
            android:scaleType="fitXY"/>


        <TextView
            android:layout_width="match_parent"
            android:background="#FFFFFF"
            android:textColor="#B71C1C"
            android:layout_marginTop="10dp"
            android:layout_height="wrap_content"
            android:textSize="20sp"
            android:text="Like Clause"/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="\n\nLike clause is used as condition in SQL query. Like clause compares data with an expression using wildcard operators. It is used to find similar data from the table.

\n\nWildcard operators

\nThere are two wildcard operators that are used in like clause.

\n\nPercent sign % : represents zero, one or more than one character.
\nUnderscore sign _ : represents only one character"/>


        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="\nSELECT * from Student where s_name like '_d%'; "/>



        <ImageView
            android:src="@drawable/likeclause"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginLeft="5dp"
            android:layout_marginTop="10dp"
            android:layout_marginBottom="8dp"
            android:scaleType="fitXY"/>

        <View
            android:layout_width="match_parent"
            android:layout_height="3dp"
            android:layout_marginTop="2dp"
            android:layout_marginBottom="2dp"
            android:background="@android:color/darker_gray"/>




        <TextView
            android:layout_width="match_parent"
            android:background="#FFFFFF"
            android:textColor="#B71C1C"
            android:layout_marginTop="10dp"
            android:layout_height="wrap_content"
            android:textSize="20sp"
            android:text="OrderBy Clause"/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="\n\nOrder by clause is used with Select statement for arranging retrieved data in sorted order. The Order by clause by default sort data in ascending order. To sort data in descending order DESC keyword is used with Order by clause"/>


        <ImageView
            android:src="@drawable/emptable"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginLeft="5dp"
            android:layout_marginTop="10dp"
            android:layout_marginBottom="8dp"
            android:scaleType="fitXY"/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textSize="20sp"
            android:textColor="#FFFFFF"
            android:text="Syntax:"/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="\nSELECT column-list|* from table-name order by asc|desc; "/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="SELECT * from Emp order by salary; "/>


        <ImageView
            android:src="@drawable/orderby"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginLeft="5dp"
            android:layout_marginTop="10dp"
            android:layout_marginBottom="8dp"
            android:scaleType="fitXY"/>


        <TextView
            android:layout_width="match_parent"
            android:background="#FFFFFF"
            android:textColor="#B71C1C"
            android:layout_marginTop="10dp"
            android:layout_height="wrap_content"
            android:textSize="20sp"
            android:text="Group By Clause"/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="\n\nGroup by clause is used to group the results of a SELECT query based on one or more columns. It is also used with SQL functions to group the result from one or more tables"/>



        <ImageView
            android:src="@drawable/emptable1"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginLeft="5dp"
            android:layout_marginTop="10dp"
            android:layout_marginBottom="8dp"
            android:scaleType="fitXY"/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textSize="20sp"
            android:textColor="#FFFFFF"
            android:text="Syntax:"/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="\nSELECT column_name, function(column_name)
FROM table_name
WHERE condition
GROUP BY column_name; "/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="SELECT name, age
from Emp group by salary; "/>


        <ImageView
            android:src="@drawable/groupbyclause"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginLeft="5dp"
            android:layout_marginTop="10dp"
            android:layout_marginBottom="8dp"
            android:scaleType="fitXY"/>




        <TextView
            android:layout_width="match_parent"
            android:background="#FFFFFF"
            android:textColor="#B71C1C"
            android:layout_marginTop="10dp"
            android:layout_height="wrap_content"
            android:textSize="20sp"
            android:text="Having Clause"/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="\n\nhaving clause is used with SQL Queries to give more precise condition for a statement. It is used to mention condition in Group based SQL functions, just like WHERE clause"/>



        <ImageView
            android:src="@drawable/saletable"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginLeft="5dp"
            android:layout_marginTop="10dp"
            android:layout_marginBottom="8dp"
            android:scaleType="fitXY"/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textSize="20sp"
            android:textColor="#FFFFFF"
            android:text="Syntax:"/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="\nselect column_name, function(column_name)
FROM table_name
WHERE column_name condition
GROUP BY column_name
HAVING function(column_name) condition; "/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="SELECT *
from sale group customer
having sum(previous_balance) greater_than 3000; "/>


        <ImageView
            android:src="@drawable/havingclause"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginLeft="5dp"
            android:layout_marginTop="10dp"
            android:layout_marginBottom="8dp"
            android:scaleType="fitXY"/>


        <TextView
            android:layout_width="match_parent"
            android:background="#FFFFFF"
            android:textColor="#B71C1C"
            android:layout_marginTop="10dp"
            android:layout_height="wrap_content"
            android:textSize="20sp"
            android:text="Distinct keyword"/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="\n\nThe distinct keyword is used with Select statement to retrieve unique values from the table. Distinct removes all the duplicate records while retrieving from database"/>



        <ImageView
            android:src="@drawable/emptable2"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginLeft="5dp"
            android:layout_marginTop="10dp"
            android:layout_marginBottom="8dp"
            android:scaleType="fitXY"/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textSize="20sp"
            android:textColor="#FFFFFF"
            android:text="Syntax:"/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="\nSELECT distinct column-name from table-name;; "/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="select distinct salary from Emp; "/>


        <ImageView
            android:src="@drawable/distinctkeyword"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginLeft="5dp"
            android:layout_marginTop="10dp"
            android:layout_marginBottom="8dp"
            android:scaleType="fitXY"/>




        <TextView
            android:layout_width="match_parent"
            android:background="#FFFFFF"
            android:textColor="#B71C1C"
            android:layout_marginTop="10dp"
            android:layout_height="wrap_content"
            android:textSize="20sp"
            android:text="AND OR Operator"/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="\n\nAND and OR operators are used with Where clause to make more precise conditions for fetching data from database by combining more than one condition together"/>



        <ImageView
            android:src="@drawable/emptable3"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginLeft="5dp"
            android:layout_marginTop="10dp"
            android:layout_marginBottom="8dp"
            android:scaleType="fitXY"/>

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:background="#FFFFFF"
            android:textColor="#B71C1C"
            android:layout_marginTop="10dp"
            android:text="AND Operator"/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="AND operator is used to set multiple conditions with Where clause"/>


        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="SELECT * from Emp WHERE salary less_than 10000 AND age grater_than 25; "/>


        <ImageView
            android:src="@drawable/addoperator"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginLeft="5dp"
            android:layout_marginTop="10dp"
            android:layout_marginBottom="8dp"
            android:scaleType="fitXY"/>


        <TextView
            android:layout_width="match_parent"
            android:background="#FFFFFF"
            android:textColor="#B71C1C"
            android:layout_marginTop="10dp"
            android:layout_height="wrap_content"
            android:text="OR Operator"/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="OR operator is also used to combine multiple conditions with Where clause. The only difference between AND and OR is their behaviour. When we use AND to combine two or more than two conditions, records satisfying all the condition will be in the result. But in case of OR, atleast one condition from the conditions specified must be satisfied by any record to be in the result"/>


        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:text="SELECT * from Emp WHERE salary greater_than 10000 OR age greater_than 25 ; "/>


        <ImageView
            android:src="@drawable/oroperator"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginLeft="5dp"
            android:layout_marginTop="10dp"
            android:layout_marginBottom="8dp"
            android:scaleType="fitXY"/>








    </LinearLayout>
</ScrollView>